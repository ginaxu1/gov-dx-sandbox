apiVersion: v1
kind: ConfigMap
metadata:
  name: api-server-config
  namespace: choreo-system
data:
  # Service Configuration
  service.name: "gov-dx-api-server"
  service.version: "1.0.0"
  service.description: "OpenDIF API Server for managing consumers, providers, and applications"
  
  # Port Configuration
  service.port: "3000"
  service.health.path: "/health"
  
  # Environment Configuration
  environment: "production"
  log.level: "info"
  log.format: "json"
  
  # Database Configuration (if needed)
  database.host: "postgres-service"
  database.port: "5432"
  database.name: "govdx_sandbox"
  database.ssl.mode: "require"
  
  # External Service URLs
  orchestration.engine.url: "http://orchestration-engine:4000"
  consent.engine.url: "http://consent-engine:8081"
  policy.decision.point.url: "http://policy-decision-point:8082"
  
  # Security Configuration
  jwt.secret: "${JWT_SECRET}"
  jwt.expiration: "3600" # 1 hour in seconds
  
  # CORS Configuration
  cors.allowed.origins: "https://portal.govdx-sandbox.gov,https://admin.govdx-sandbox.gov"
  cors.allowed.methods: "GET,POST,PUT,DELETE,OPTIONS"
  cors.allowed.headers: "Content-Type,Authorization,X-Requested-With,Accept,Origin"
  cors.allow.credentials: "true"
  
  # Rate Limiting
  rate.limit.requests: "1000"
  rate.limit.window: "3600" # 1 hour in seconds
  
  # Monitoring
  metrics.enabled: "true"
  tracing.enabled: "true"
  tracing.sample.rate: "0.1"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  namespace: choreo-system
  labels:
    app: api-server
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
        version: v1
    spec:
      containers:
      - name: api-server
        image: choreo-registry/gov-dx-api-server:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: PORT
          value: "3000"
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-server-secrets
              key: jwt-secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: api-server-secrets
              key: database-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: api-server-config

---
apiVersion: v1
kind: Service
metadata:
  name: api-server-service
  namespace: choreo-system
  labels:
    app: api-server
spec:
  selector:
    app: api-server
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-server-ingress
  namespace: choreo-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://portal.govdx-sandbox.gov,https://admin.govdx-sandbox.gov"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET,POST,PUT,DELETE,OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type,Authorization,X-Requested-With,Accept,Origin"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
  - hosts:
    - api.govdx-sandbox.gov
    secretName: api-server-tls
  rules:
  - host: api.govdx-sandbox.gov
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-server-service
            port:
              number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: api-server-secrets
  namespace: choreo-system
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  jwt-secret: <base64-encoded-jwt-secret>
  database-url: <base64-encoded-database-url>
