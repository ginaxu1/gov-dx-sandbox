openapi: 3.0.1
info:
  title: Main Openapi Yaml
  version: 0.1.0
servers:
- url: "{server}:{port}/"
  variables:
    server:
      default: http://localhost
    port:
      default: "9090"
paths:
  /person/{nic}:
    get:
      operationId: getPersonNic
      parameters:
      - name: nic
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonData'
        "404":
          description: NotFound
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    CardInfo:
      required:
      - cardNumber
      - cardStatus
      - expiryDate
      - issueDate
      type: object
      properties:
        cardNumber:
          type: string
        issueDate:
          type: string
        expiryDate:
          type: string
        cardStatus:
          $ref: '#/components/schemas/CardStatus'
      additionalProperties: false
    CardStatus:
      type: string
      enum:
      - CANCELLED
      - LOST
      - EXPIRED
      - ACTIVE
    CitizenshipInfo:
      required:
      - certificateNumber
      - citizenshipType
      - issueDate
      type: object
      properties:
        citizenshipType:
          $ref: '#/components/schemas/CitizenshipType'
        certificateNumber:
          type: string
        issueDate:
          type: string
      additionalProperties: false
    CitizenshipType:
      type: string
      enum:
      - NATURALIZATION
      - REGISTRATION
      - DESCENT
    CivilStatus:
      type: string
      enum:
      - DIVORCED
      - WIDOWED
      - SINGLE
      - MARRIED
    ErrorPayload:
      required:
      - message
      - method
      - path
      - reason
      - status
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    Gender:
      type: string
      enum:
      - FEMALE
      - MALE
    LostCardReplacementInfo:
      required:
      - complaintDate
      - complaintNumber
      - policeStation
      type: object
      properties:
        policeStation:
          type: string
        complaintDate:
          type: string
        complaintNumber:
          type: string
      additionalProperties: false
    ParentInfo:
      required:
      - fatherName
      - fatherNic
      - motherName
      - motherNic
      type: object
      properties:
        fatherName:
          type: string
        motherName:
          type: string
        fatherNic:
          type: string
        motherNic:
          type: string
      additionalProperties: false
    PersonData:
      type: object
      allOf:
      - $ref: '#/components/schemas/PersonInfo'
      - required:
        - cardInfo
        - citizenshipInfo
        - lostCardReplacementInfo
        - parentInfo
        type: object
        properties:
          cardInfo:
            $ref: '#/components/schemas/CardInfo'
          lostCardReplacementInfo:
            nullable: true
            allOf:
            - $ref: '#/components/schemas/LostCardReplacementInfo'
          citizenshipInfo:
            $ref: '#/components/schemas/CitizenshipInfo'
          parentInfo:
            $ref: '#/components/schemas/ParentInfo'
        additionalProperties: false
    PersonInfo:
      required:
      - civilStatus
      - contactNumber
      - dateOfBirth
      - email
      - fullName
      - gender
      - nic
      - otherNames
      - permanentAddress
      - photo
      - placeOfBirth
      - profession
      - surname
      type: object
      properties:
        nic:
          type: string
        fullName:
          type: string
        surname:
          type: string
        otherNames:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
        placeOfBirth:
          type: string
        permanentAddress:
          type: string
        profession:
          type: string
        civilStatus:
          $ref: '#/components/schemas/CivilStatus'
        contactNumber:
          type: string
        email:
          type: string
        photo:
          type: string
      additionalProperties: false
